import time

import UTB

from machine import SoftI2C, Pin


from mpu9250 import MPU9250

servo_x = UTB.UBT_SERVO(UART(0, baudrate=115200), 1)
servo_y = UTB.UBT_SERVO(UART(0, baudrate=115200), 2)

servo_x.servo_do(angle_x, time, 0, 0)
servo_x.servo_do(angle_y, time, 0, 0)

i2c = SoftI2C(scl=Pin(5), sda=Pin(4), freq=100000)
sensor = MPU9250(i2c)

print("MPU9250 id: " + hex(sensor.whoami))

while True:
    # print(sensor.acceleration[2])# 沿着x轴旋转
    # print(sensor.acceleration[1])# 沿着z轴旋转
    # print(sensor.acceleration[0]) # 沿着y轴旋转
    #print(sensor.gyro)
    print(sensor.acceleration)
    time.sleep_ms(10)

"""
随机截取的一段传感器的数据
(-0.8212111, 0.0, 10.37168)
(-0.7876924, 0.004788403, 10.35732)
(-0.8020576, 0.01675941, 10.33337)
(-0.7924808, 0.002394202, 10.38365)
(-0.8212111, 0.01675941, 10.33577)
(-0.7924808, 0.04548983, 10.41478)
(-0.7852982, 0.03112462, 10.38844)
(-0.8379706, 0.05267244, 10.31422)
(-0.8523358, 0.02873042, 10.36929)
(-0.8331822, 0.04548983, 10.38365)
(-0.7781156, -0.01675941, 10.37886)
(-0.7924808, 0.01915361, 10.34295)
(-0.782904, 0.004788403, 10.33816)
(-0.8140285, 0.01675941, 10.36211)
(-0.8188169, 0.02154782, 10.38844)
(-0.8236053, 0.002394202, 10.34535)
(-0.8595184, 0.01675941, 10.33816)
(-0.7924808, 0.02633622, 10.39802)
(-0.7757214, 0.05267244, 10.35971)
(-0.7924808, 0.01197101, 10.41717)
(-0.7613561, 0.05267244, 10.35732)
(-0.8092402, 0.02154782, 10.33816)
(-0.8188169, 0.02154782, 10.33577)
(-0.8379706, 0.03112462, 10.34774)
(-0.8116343, -0.01915361, 10.40759)
(-0.8236053, 0.03830723, 10.39562)
(-0.8451532, 0.03591302, 10.39562)
(-0.8164227, 0.03830723, 10.35013)
(-0.7589619, 0.02394202, 10.30943)
(-0.8451532, 0.03112462, 10.38844)
(-0.7924808, 0.02873042, 10.4052)
(-0.8188169, 0.009576806, 10.36211)
(-0.7996634, 0.002394202, 10.39802)
(-0.8259995, 0.009576806, 10.43154)
(-0.8379706, 0.007182605, 10.40999)
(-0.8571242, 0.004788403, 10.41478)
(-0.7996634, -0.01675941, 10.39802)
(-0.8236053, 0.04070143, 10.35732)
(-0.8331822, -0.03112462, 10.1155)
(-0.8355764, 0.03591302, 10.3238)
(-0.7589619, 0.04309563, 10.40759)
(-0.8283938, 0.03112462, 10.25437)
(-0.7589619, 0.03351882, 10.3238)
(-0.7900866, 0.02154782, 10.40999)
(-0.8212111, 0.04309563, 10.32859)
(-0.7182605, -0.009576806, 10.29746)
(-0.7254431, 0.1101333, 10.37886)
(-0.8283938, 0.02154782, 10.40999)
(-0.8571242, -0.01675941, 10.35732)
(-0.794875, 0.002394202, 10.38844)
(-0.8212111, -0.007182605, 10.44351)
(-0.7685388, -0.02633622, 10.30704)
(-0.7900866, 0.04788403, 10.2807)
(-0.7422025, 0.04548983, 10.31901)
(-0.7158663, 0.1053449, 10.28788)
(-0.8283938, 0.03830723, 10.34535)
(-0.8116343, 0.01675941, 10.34295)
(-0.7972692, -0.002394202, 10.27352)
(-0.7924808, 0.04070143, 10.42196)
(-0.7110779, 0.1149217, 10.45548)
(-0.878672, -0.02394202, 10.40759)
(-0.8140285, 0.04788403, 10.55125)
(-0.7852982, 0.08619126, 10.27831)
(-0.8259995, 0.0, 10.40041)
(-0.8188169, 0.05267244, 10.38844)
(-0.7876924, 0.01915361, 10.54406)
(-0.8643068, 0.002394202, 9.967062)
(-0.8355764, 0.02873042, 10.44111)
(-0.8379706, 0.009576806, 10.50336)
(-0.8092402, 0.03830723, 10.3238)
(-0.8164227, 0.01197101, 10.37408)
(-0.7781156, 0.03112462, 10.38605)
(-0.7876924, 0.04309563, 10.28549)
(-0.914585, -0.01915361, 10.62068)
(-0.8403648, 0.01197101, 10.43393)"""
